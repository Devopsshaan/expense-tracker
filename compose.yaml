services:

  traefik: 
    image: traefik:v3.0
    container_name: traefik
    command: 
      # Enable Traefik Web UI (Use authentication in production)
      - "--api.insecure=true"
      # Enable Docker provider (Auto-detect running containers)
      - "--providers.docker=true"
      # Define HTTP entrypoint (Port 80)
      - "--entrypoints.web.address=:80"
    ports: 
      - 80:80
      - 8081:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
  
  db:
    image: postgres:17
    volumes:
      - db-vol:/var/lib/postgresql/data:rw
      - ./db:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    restart: unless-stopped

  backend:
    build: ./backend
    env_file:
      - ./backend/.env
    ports:
      - 5000:5000
    environment:
      - DATABASE_HOST=db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
    depends_on:
      - db
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_BASE_URL: /api
    ports:
      - 8080:80
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  db-vol:
